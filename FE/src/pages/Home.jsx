import { Link } from 'react-router-dom';
import { useState, useEffect } from 'react';
import { 
  FiTruck, 
  FiShield, 
  FiAward,
  FiRefreshCw,
  FiArrowRight,
  FiChevronLeft,
  FiChevronRight
} from 'react-icons/fi';

const Home = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  
  const heroSlides = [
    {
      id: 1,
      title: 'B·ªô S∆∞u T·∫≠p Xu√¢n H√® 2024',
      subtitle: 'T·ªèa s√°ng v·ªõi phong c√°ch ri√™ng c·ªßa b·∫°n',
      image: 'https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=1920&q=80',
      cta: 'Kh√°m Ph√° Ngay',
      link: '/products',
    },
    {
      id: 2,
      title: 'Nh·∫´n Kim C∆∞∆°ng Sang Tr·ªçng',
      subtitle: 'Bi·ªÉu t∆∞·ª£ng c·ªßa t√¨nh y√™u vƒ©nh c·ª≠u',
      image: 'https://images.unsplash.com/photo-1605100804763-247f67b3557e?w=1920&q=80',
      cta: 'Xem S·∫£n Ph·∫©m',
      link: '/products',
    },
    {
      id: 3,
      title: 'D√¢y Chuy·ªÅn Cao C·∫•p',
      subtitle: 'N√¢ng t·∫ßm phong c√°ch c·ªßa b·∫°n',
      image: 'https://images.unsplash.com/photo-1599643478518-a784e5dc4c8f?w=1920&q=80',
      cta: 'Mua S·∫Øm Ngay',
      link: '/products',
    },
  ];

  const collections = [
    {
      id: 1,
      name: 'Nh·∫´n C∆∞·ªõi',
      image: 'https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=600&q=80',
      count: 25,
      link: '/products?category=rings',
    },
    {
      id: 2,
      name: 'D√¢y Chuy·ªÅn',
      image: 'https://images.unsplash.com/photo-1599643478518-a784e5dc4c8f?w=600&q=80',
      count: 35,
      link: '/products?category=necklaces',
    },
    {
      id: 3,
      name: 'B√¥ng Tai',
      image: 'https://images.unsplash.com/photo-1535632066927-ab7c9ab60908?w=600&q=80',
      count: 40,
      link: '/products?category=earrings',
    },
    {
      id: 4,
      name: 'V√≤ng Tay',
      image: 'https://images.unsplash.com/photo-1611591437281-460bfbe1220a?w=600&q=80',
      count: 30,
      link: '/products?category=bracelets',
    },
  ];

  const features = [
    {
      icon: <FiTruck className="w-8 h-8" />,
      title: 'Mi·ªÖn Ph√≠ V·∫≠n Chuy·ªÉn',
      description: 'Cho ƒë∆°n h√†ng t·ª´ 500.000ƒë',
    },
    {
      icon: <FiShield className="w-8 h-8" />,
      title: 'Thanh To√°n B·∫£o M·∫≠t',
      description: 'An to√†n 100%',
    },
    {
      icon: <FiAward className="w-8 h-8" />,
      title: 'Ch·∫•t L∆∞·ª£ng ƒê·∫£m B·∫£o',
      description: 'B·∫£o h√†nh tr·ªçn ƒë·ªùi',
    },
    {
      icon: <FiRefreshCw className="w-8 h-8" />,
      title: 'ƒê·ªïi Tr·∫£ D·ªÖ D√†ng',
      description: 'Trong v√≤ng 30 ng√†y',
    },
  ];

  // Auto slide
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % heroSlides.length);
    }, 5000);
    return () => clearInterval(timer);
  }, [heroSlides.length]);

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % heroSlides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + heroSlides.length) % heroSlides.length);
  };

  return (
    <div className="min-h-screen bg-white">
      {/* Hero Slider */}
      <section className="relative h-[600px] overflow-hidden">
        {heroSlides.map((slide, index) => (
          <div
            key={slide.id}
            className={`absolute inset-0 transition-opacity duration-1000 ${
              index === currentSlide ? 'opacity-100' : 'opacity-0'
            }`}
          >
            <div
              className="absolute inset-0 bg-cover bg-center"
              style={{ backgroundImage: `url(${slide.image})` }}
            >
              <div className="absolute inset-0 bg-black/40" />
            </div>
            <div className="relative h-full flex items-center justify-center text-center text-white px-4">
              <div className={`transition-all duration-700 ${index === currentSlide ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'}`}>
                <h1 className="text-5xl md:text-6xl font-serif font-bold mb-4">
                  {slide.title}
                </h1>
                <p className="text-xl md:text-2xl mb-8">{slide.subtitle}</p>
                <Link
                  to={slide.link}
                  className="inline-flex items-center gap-2 bg-blue-500 hover:bg-blue-600 text-white px-8 py-4 rounded-full font-medium transition-colors"
                >
                  {slide.cta}
                  <FiArrowRight />
                </Link>
              </div>
            </div>
          </div>
        ))}

        {/* Navigation Arrows */}
        <button
          onClick={prevSlide}
          className="absolute left-4 top-1/2 -translate-y-1/2 bg-white/20 hover:bg-white/40 backdrop-blur-sm text-white p-3 rounded-full transition-colors z-10"
        >
          <FiChevronLeft className="w-6 h-6" />
        </button>
        <button
          onClick={nextSlide}
          className="absolute right-4 top-1/2 -translate-y-1/2 bg-white/20 hover:bg-white/40 backdrop-blur-sm text-white p-3 rounded-full transition-colors z-10"
        >
          <FiChevronRight className="w-6 h-6" />
        </button>

        {/* Dots */}
        <div className="absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-3 z-10">
          {heroSlides.map((_, index) => (
            <button
              key={index}
              onClick={() => setCurrentSlide(index)}
              className={`w-3 h-3 rounded-full transition-all ${
                index === currentSlide
                  ? 'bg-white w-8'
                  : 'bg-white/50 hover:bg-white/75'
              }`}
            />
          ))}
        </div>
      </section>

      {/* Features */}
      <section className="py-16 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {features.map((feature, index) => (
              <div
                key={index}
                className="text-center animate-fade-in"
                style={{ animationDelay: `${index * 100}ms` }}
              >
                <div className="inline-flex items-center justify-center w-16 h-16 bg-blue-100 text-blue-500 rounded-full mb-4">
                  {feature.icon}
                </div>
                <h3 className="text-lg font-semibold mb-2">{feature.title}</h3>
                <p className="text-gray-600">{feature.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Collections */}
      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-serif font-bold mb-4">
              B·ªô S∆∞u T·∫≠p
            </h2>
            <p className="text-gray-600 text-lg">
              Kh√°m ph√° c√°c s·∫£n ph·∫©m trang s·ª©c tinh t·∫ø v√† sang tr·ªçng
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {collections.map((collection, index) => (
              <div
                key={collection.id}
                className="animate-fade-in"
                style={{ animationDelay: `${index * 100}ms` }}
              >
                <Link
                  to={collection.link}
                  className="group block relative overflow-hidden rounded-lg"
                >
                  <div className="aspect-square relative">
                    <img
                      src={collection.image}
                      alt={collection.name}
                      className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent" />
                    <div className="absolute bottom-0 left-0 right-0 p-6 text-white">
                      <h3 className="text-2xl font-serif font-bold mb-1">
                        {collection.name}
                      </h3>
                      <p className="text-sm text-gray-200">
                        {collection.count} s·∫£n ph·∫©m
                      </p>
                    </div>
                  </div>
                </Link>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-blue-500 to-cyan-500 text-white">
        <div className="max-w-4xl mx-auto px-4 text-center">
          <div>
            <h2 className="text-4xl md:text-5xl font-serif font-bold mb-6">
              ƒêƒÉng K√Ω Nh·∫≠n ∆Øu ƒê√£i
            </h2>
            <p className="text-xl mb-8 text-blue-50">
              Nh·∫≠n ngay m√£ gi·∫£m gi√° 10% cho ƒë∆°n h√†ng ƒë·∫ßu ti√™n
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto">
              <input
                type="email"
                placeholder="Email c·ªßa b·∫°n"
                className="flex-1 px-6 py-4 rounded-full text-gray-900 focus:outline-none focus:ring-2 focus:ring-white"
              />
              <button className="bg-white text-blue-500 px-8 py-4 rounded-full font-semibold hover:bg-blue-50 transition-colors">
                ƒêƒÉng K√Ω
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* Why Choose Us */}
      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-serif font-bold mb-4">
              T·∫°i Sao Ch·ªçn Ch√∫ng T√¥i
            </h2>
            <p className="text-gray-600 text-lg">
              Cam k·∫øt mang ƒë·∫øn tr·∫£i nghi·ªám mua s·∫Øm t·ªët nh·∫•t
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-12">
            {[
              {
                emoji: 'üíé',
                title: 'Ch·∫•t L∆∞·ª£ng V∆∞·ª£t Tr·ªôi',
                description:
                  'M·ªói s·∫£n ph·∫©m ƒë·ªÅu ƒë∆∞·ª£c ch·∫ø t√°c t·ªâ m·ªâ t·ª´ v·∫≠t li·ªáu cao c·∫•p v√† ki·ªÉm ƒë·ªãnh ch·∫•t l∆∞·ª£ng nghi√™m ng·∫∑t.',
              },
              {
                emoji: 'üé®',
                title: 'Thi·∫øt K·∫ø ƒê·ªôc ƒê√°o',
                description:
                  'B·ªô s∆∞u t·∫≠p ƒëa d·∫°ng v·ªõi nh·ªØng thi·∫øt k·∫ø tinh t·∫ø, ph√π h·ª£p v·ªõi m·ªçi phong c√°ch v√† s·ªü th√≠ch.',
              },
              {
                emoji: 'ü§ù',
                title: 'Gi√° Tr·ªã T·ªët Nh·∫•t',
                description:
                  'Cam k·∫øt mang ƒë·∫øn s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng v·ªõi m·ª©c gi√° h·ª£p l√Ω nh·∫•t tr√™n th·ªã tr∆∞·ªùng.',
              },
            ].map((item, index) => (
              <div
                key={index}
                className="text-center animate-fade-in"
                style={{ animationDelay: `${index * 100}ms` }}
              >
                <div className="text-6xl mb-6">{item.emoji}</div>
                <h3 className="text-2xl font-semibold mb-4">{item.title}</h3>
                <p className="text-gray-600 leading-relaxed">
                  {item.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default Home;
